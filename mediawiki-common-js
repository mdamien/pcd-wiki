/* Tout JavaScript ici sera chargé avec chaque page accédée par n’importe quel utilisateur. */

/**
 * getElementsByClass : rechercher les éléments de la page dont le paramètre "class" est celui recherché
 */
function getElementsByClass(searchClass, node, tag) {
  if (node == null) node = document;
  if (tag == null) tag = '*';
  return getElementsByClassName(node, tag, searchClass);
}

/**
 * Diverses fonctions manipulant les classes
 * Utilise des expressions régulières et un cache pour de meilleures perfs
 * isClass et whichClass depuis http://fr.wikibooks.org/w/index.php?title=MediaWiki:Common.js&oldid=140211
 * hasClass, addClass, removeClass et eregReplace depuis http://drupal.org.in/doc/misc/drupal.js.source.html
 * surveiller l'implémentation de .classList http://www.w3.org/TR/2008/WD-html5-diff-20080122/#htmlelement-extensions
 */
function isClass(element, classe) {
    return hasClass(element, classe);
}
 
function whichClass(element, classes) {
    var s=" "+element.className+" ";
    for(var i=0;i<classes.length;i++)
        if (s.indexOf(" "+classes[i]+" ")>=0) return i;
    return -1;
}
 
function hasClass(node, className) {
    var haystack = node.className;
    if(!haystack) return false;
    if (className === haystack) {
        return true;
    }
    return (" " + haystack + " ").indexOf(" " + className + " ") > -1;
}
 
function addClass(node, className) {
    if (hasClass(node, className)) {
        return false;
    }
    var cache = node.className;
    if (cache) {
        node.className = cache + ' ' + className;
    } else {
        node.className = className;
    }
    return true;
}
 
function removeClass(node, className) {
  if (!hasClass(node, className)) {
    return false;
  }
  node.className = eregReplace('(^|\\s+)'+ className +'($|\\s+)', ' ', node.className);
  return true;
}
 
function eregReplace(search, replace, subject) {
    return subject.replace(new RegExp(search,'g'), replace);
}

/**
 * Script pour alterner entre plusieurs cartes de géolocalisation
 */
 
if(( mw.config.get('wgAction')=="view" || mw.config.get('wgAction')=="purge" || mw.config.get('wgAction')=="submit")) addOnloadHook(GeoBox_Init);
 
function GeoBox_Init(Element){ 
     if(!Element) Element = document.body; 
     var cont = getElementsByClass('img_toogle', Element, 'div');
     if(cont.length==0) return; 
     for (var i = 0,m=cont.length; i < m ; i++) {
          cont[i].id = 'img_toogle_' + i;
          var Boxes = getElementsByClass('geobox',cont[i]);
          var ToggleLinksDiv = document.createElement('ul');
          ToggleLinksDiv.id = 'geoboxToggleLinks_' + i;
          for(var a=0,l=Boxes.length;a<l;a++){
               var ThisBox = Boxes[a];
               ThisBox.id = 'geobox_' + i + "_" + a;
               ThisBox.style.borderTop='0';
               var ThisAlt = ThisBox.getElementsByTagName('img')[0].alt
               var toggle = document.createElement('a');
               toggle.id = 'geoboxToggle_' + i + "_" + a;
               toggle.appendChild(document.createTextNode(ThisAlt));
               toggle.href='javascript:;';
               toggle.onclick = function(){
                    GeoBox_Toggle(this);
                    return false;
               }
               var Li = document.createElement('li');
               Li.appendChild(toggle);
               ToggleLinksDiv.appendChild(Li);
               if(a==(l-1)){
                    Li.style.display = "none";
               }else{
                    ThisBox.style.display = "none";
               }
          }
          cont[i].appendChild(ToggleLinksDiv);
     }
}
 
function GeoBox_Toggle(link){
     var ImgToggleIndex = link.id.split('geoboxToggle_').join('').replace(/_.*/g, "");
     var GeoBoxIndex = link.id.replace(/.*_/g, "");
     var ImageToggle = document.getElementById('img_toogle_' + ImgToggleIndex);
     var Links = document.getElementById('geoboxToggleLinks_' + ImgToggleIndex);
     var Geobox = document.getElementById('geobox_' + ImgToggleIndex + "_" + GeoBoxIndex);
     var Link = document.getElementById('geoboxToggle_' + ImgToggleIndex + "_" + GeoBoxIndex);
     if( (!ImageToggle) || (!Links) || (!Geobox) || (!Link) ) return;
     var AllGeoboxes = getElementsByClass('geobox',ImageToggle);
     for(var a=0,l=AllGeoboxes.length;a<l;a++){
          if(AllGeoboxes[a] == Geobox){
               AllGeoboxes[a].style.display = "";
          }else{
               AllGeoboxes[a].style.display = "none";
          }
     }
     var AllToggleLinks = Links.getElementsByTagName('a');
     for(var a=0,l=AllToggleLinks.length;a<l;a++){
          if(AllToggleLinks[a] == Link){
               AllToggleLinks[a].parentNode.style.display = "none";
          }else{
               AllToggleLinks[a].parentNode.style.display = "";
          }
     }
}